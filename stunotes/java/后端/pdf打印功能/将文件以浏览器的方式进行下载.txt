==================================================================================
由于linux系统问题导致itext中的字体不生效导致文件内容为空大小为0kb的问题
renderer.getFontResolver().addFont

解决方案：https://blog.csdn.net/sand_clock/article/details/72412608

=====================================================================================
学习资料：
itext----https://my.oschina.net/sanji/blog/277704
pdfwrite中itext中文支持：https://blog.csdn.net/sand_clock/article/details/70227077




==================================================================================
1、 //1.设置文件ContentType类型，这样设置，会自动判断下载文件类型   
        response.setContentType("multipart/form-data");   
        //2.设置文件头：最后一个参数是设置下载文件名(假如我们叫a.pdf)   
        response.setHeader("Content-Disposition", "attachment;fileName="+"a.pdf");



2、将获取到的动态数据jsp页面通过itxt插件 转换成指定pdf格式
调用：
@RequestMapping(value = "pdf/{id}", method = RequestMethod.GET)
	public void getPDF(HttpServletRequest request,HttpServletResponse response,@PathVariable String id){
		DisposeApply disposeApply = getDisposeApply(id);
		try {
			PDFTemplateUtil.createPDF(disposeApply,response,request.getSession().getServletContext().getRealPath("/"), "busSysDeploy.ftl");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}


处理：
public static void createPDF(Object data, HttpServletResponse response, String path, String templateFileName)
			throws IOException {
		// 创建一个FreeMarker实例, 负责管理FreeMarker模板的Configuration实例
		Configuration cfg = new Configuration();
		// 指定FreeMarker模板文件的位置
		cfg.setDirectoryForTemplateLoading(new File(path + "/WEB-INF/ftl"));
		// 设置模板的编码格式
		cfg.setEncoding(Locale.CHINA, "UTF-8");
		
		
		//1.设置文件ContentType类型，这样设置，会自动判断下载文件类型   
        response.setContentType("multipart/form-data");   
        //2.设置文件头：最后一个参数是设置下载文件名(假如我们叫a.pdf)
        response.setHeader("Content-Disposition", "attachment;fileName=a.pdf");  
		OutputStream out = response.getOutputStream();
		
		Template template = cfg.getTemplate(templateFileName, "UTF-8");
		try {
			ITextRenderer renderer = new ITextRenderer();
			// 设置 css中 的字体样式（暂时仅支持宋体和黑体）
			renderer.getFontResolver().addFont(path + "/resources/font/simsun.ttc", BaseFont.IDENTITY_H,
					BaseFont.NOT_EMBEDDED);
			renderer.getFontResolver().addFont(path + "/resources/font/simhei.ttf", BaseFont.IDENTITY_H,
					BaseFont.NOT_EMBEDDED);
			// 获取模板文件
			StringWriter writer = new StringWriter();
			// 将数据输出到html中
			template.process(data, writer);
			writer.flush();
			// 把html代码传入渲染器中
			renderer.setDocumentFromString(writer.toString());
			renderer.layout();
			renderer.createPDF(out, false);
			renderer.finishPDF();
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}  