<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  
  <!-- 引入spring 配置文件  -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:spring/applicationContext.xml</param-value>
  </context-param>
  
  <!--  防止内存泄漏 https://www.cnblogs.com/qiankun-site/p/5886673.html -->
  <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  
  <!-- spring监听 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 日志的xml配置文件 -->
  <context-param>
  	<param-name>log4jConfiguration</param-name>
  	<param-value>classpath:log/log4j2.xml</param-value>
  </context-param>
  
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  
  <!-- 部署在同一个web容器中的项目，要配置不同的param-value（比如”项目名.root”），不然会造成冲突,默认webapp.root -->
  <context-param>
	<param-name>webAppRootKey</param-name>
	<param-value>demo.root</param-value>
  </context-param>
  
  <!-- 配置编码过滤器 -->
  <filter>
  	<filter-name>encodingFilter</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  	<init-param>
  		<param-name>forceEncoding</param-name>
  		<param-value>true</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>encodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- springMvc servlet配置  -->
  <servlet>
  	<servlet-name>appServlet</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:spring/spring-mvc.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  	<!-- 表示支持异步  主线程一直处于监听状态 让异步线程去处理业务 处理完毕可直接返回处理结果 或  再在转发给其他servlet线程返回响应结果  -->
  	<async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
  	<servlet-name>appServlet</servlet-name>
  	<!-- 拦截卸载spring字段的请求 -->
  	<url-pattern>/spring/*</url-pattern>
  </servlet-mapping>
</web-app>


